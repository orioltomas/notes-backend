{"version":3,"sources":["services/notes.js","components/Headline.js","components/Note.js","components/NoteForm.js","App.js","index.js"],"names":["baseUrl","notesServices","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Headline","text","className","Note","note","toggleImportance","label","important","content","onClick","NoteForm","submitFunction","noteValue","noteChangeFunction","onSubmit","placeholder","value","onChange","type","App","useState","notes","setNotes","newNote","setNewNote","useEffect","noteService","initialNotes","event","preventDefault","noteObject","date","Date","Math","random","returnedNote","concat","target","map","index","find","n","changedNote","catch","error","alert","filter","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"+MACMA,EAAU,aAkBDC,EADO,CAAEC,OAfT,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAabC,OAVjB,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQLI,OALzB,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,OCT9BO,EANE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACI,oBAAIC,UAAU,WAAd,SAA2BD,KCWpBE,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAAQF,EAAKG,UACjB,qBAAuB,iBAEzB,OACI,+BACMH,EAAKI,QAAS,uBAChB,wBAAQN,UAAU,gBAAgBO,QAASJ,EAA3C,SAA8DC,QCK3DI,EAbE,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,eAAgBC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,mBAE1C,OACI,uBAAMC,SAAUH,EAAhB,UACI,uBAAOI,YAAY,eAAeC,MAAOJ,EAAWK,SAAUJ,IAC9D,yBAAQX,UAAU,aAAagB,KAAK,SAApC,UACI,yBACA,gCC+DDC,EA/DH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,KAIhBC,qBAAU,WACRC,EAAYtC,SACXG,MAAK,SAAAoC,GACJL,EAASK,QAEV,IAqCH,OACE,gCACE,cAAC,EAAD,CAAU1B,KAAK,UACf,cAAC,EAAD,CACEU,eAvCU,SAACiB,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBtB,QAASe,EACTQ,KAAM,IAAIC,KACVzB,UAAW0B,KAAKC,SAAW,IAG7BR,EAAYhC,OAAOoC,GAClBvC,MAAK,SAAA4C,GACJb,EAASD,EAAMe,OAAOD,IACtBX,EAAW,QA6BTZ,UAAWW,EACXV,mBA1BsB,SAACe,GAC3BJ,EAAWI,EAAMS,OAAOrB,UA2BtB,oBAAId,UAAU,UAAd,SACGmB,EAAMiB,KAAI,SAAClC,EAAMmC,GAChB,OAAO,cAAC,EAAD,CAAkBnC,KAAMA,EAAMC,iBAAkB,kBA1BpC,SAACP,GAC1B,IAAMM,EAAOiB,EAAMmB,MAAK,SAAAC,GAAC,OAAIA,EAAE3C,KAAOA,KAChC4C,EAAW,2BAAQtC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmB,EAAY7B,OAAOC,EAAI4C,GACtBnD,MAAK,SAAA4C,GACJb,EAASD,EAAMiB,KAAI,SAAAlC,GAAI,OAAIA,EAAKN,KAAOA,EAAKM,EAAO+B,SAEpDQ,OAAM,SAAAC,GACLC,MAAM,aAAD,OACUzC,EAAKI,QADf,uCAGLc,EAASD,EAAMyB,QAAO,SAAAL,GAAC,OAAIA,EAAE3C,KAAOA,SAc6BiD,CAAmB3C,EAAKN,MAAnEyC,YC5D5BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7963509b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst notesServices = { getAll, create, update }\nexport default notesServices","const Headline = ({ text }) => {\n    return (\n        <h1 className=\"headline\">{ text }</h1>\n    )\n}\n\nexport default Headline","const Note = ({ note, toggleImportance }) => {\n\n    const label = note.important\n    ? 'Make not important' : 'Make important'\n\n    return (\n        <li>\n            { note.content }<br/>\n            <button className=\"important-btn\" onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\nexport default Note","const NoteForm = ({submitFunction, noteValue, noteChangeFunction}) => {\n\n    return (\n        <form onSubmit={submitFunction}>\n            <input placeholder=\"New note ...\" value={noteValue} onChange={noteChangeFunction}></input>\n            <button className=\"submit-btn\" type=\"submit\">\n                <span></span>\n                <span></span>\n            </button>\n      </form>\n    )\n}\n\nexport default NoteForm","import React, { useState, useEffect } from 'react'\nimport './app.css'\nimport noteService from './services/notes'\nimport Headline from './components/Headline'\nimport Note from './components/Note'\nimport NoteForm from './components/NoteForm'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n\n  useEffect(() => {\n    noteService.getAll()\n    .then(initialNotes => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5,\n    }\n  \n    noteService.create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const handleNewNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService.update(id, changedNote)\n    .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote ))\n    })\n    .catch(error => {\n      alert(\n        `The note '${note.content}' was already deleted from server.`\n      )\n      setNotes(notes.filter(n => n.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <Headline text=\"Notes\" />\n      <NoteForm \n        submitFunction={addNote} \n        noteValue={newNote} \n        noteChangeFunction={handleNewNoteChange} \n      />\n      <ul className=\"content\">\n        {notes.map((note, index) => {\n          return <Note key={index} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}